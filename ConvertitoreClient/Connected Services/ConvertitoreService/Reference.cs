//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConvertitoreClient.ConvertitoreService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="valute", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum valute : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EUR = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ITL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DEM = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FRF = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConvertitoreService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ConvertiValuta", ReplyAction="http://tempuri.org/IService/ConvertiValutaResponse")]
        float ConvertiValuta(float importo, ConvertitoreClient.ConvertitoreService.valute da, ConvertitoreClient.ConvertitoreService.valute a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ConvertiValuta", ReplyAction="http://tempuri.org/IService/ConvertiValutaResponse")]
        System.Threading.Tasks.Task<float> ConvertiValutaAsync(float importo, ConvertitoreClient.ConvertitoreService.valute da, ConvertitoreClient.ConvertitoreService.valute a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TassiConversione", ReplyAction="http://tempuri.org/IService/TassiConversioneResponse")]
        string[] TassiConversione();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TassiConversione", ReplyAction="http://tempuri.org/IService/TassiConversioneResponse")]
        System.Threading.Tasks.Task<string[]> TassiConversioneAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ConvertitoreClient.ConvertitoreService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ConvertitoreClient.ConvertitoreService.IService>, ConvertitoreClient.ConvertitoreService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public float ConvertiValuta(float importo, ConvertitoreClient.ConvertitoreService.valute da, ConvertitoreClient.ConvertitoreService.valute a) {
            return base.Channel.ConvertiValuta(importo, da, a);
        }
        
        public System.Threading.Tasks.Task<float> ConvertiValutaAsync(float importo, ConvertitoreClient.ConvertitoreService.valute da, ConvertitoreClient.ConvertitoreService.valute a) {
            return base.Channel.ConvertiValutaAsync(importo, da, a);
        }
        
        public string[] TassiConversione() {
            return base.Channel.TassiConversione();
        }
        
        public System.Threading.Tasks.Task<string[]> TassiConversioneAsync() {
            return base.Channel.TassiConversioneAsync();
        }
    }
}
